{"version":3,"sources":["components/player/player_components/Pause.js","components/player/player_components/Play.js","components/player/main.js","components/history/main.js","components/content/main.js","components/preloader/main.js","App.js","serviceWorker.js","index.js"],"names":["Pause","onPlayerClick","className","viewBox","onClick","points","Play","Player","props","state","song_image","song_title","song_author","playin","play","stop","volume","handleVolume","bind","handlePlayerClick","url","this","playerCheck","localStorage","getItem","setItem","isMobile","interval","setInterval","clearInterval","fetch","headers","then","res","json","result","setState","image","title","artist","error","pause","console","log","audio","Audio","playing","action","event","target","value","range","imageofsong","titleofsong","authorofsong","type","min","max","onChange","disabled","alt","src","React","Component","Content","shaked","tremble","e","logo","shake","keyframes","Div","styled","div","Preload","preload_component","App","preloaded","setTimeout","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","ReactDOM","render","StrictMode","document","getElementById","URL","process","href","origin","addEventListener","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.7ec44321.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Pause = ({onPlayerClick}) => {\r\n  return (\r\n    <svg className=\"playerbutton\" viewBox=\"0 0 60 60\" onClick={onPlayerClick}>\r\n      <polygon points=\"0,0 15,0 15,60 0,60\" />\r\n      <polygon points=\"25,0 40,0 40,60 25,60\" />\r\n    </svg>\r\n  )\r\n}\r\n\r\nexport default Pause\r\n","import React from 'react'\r\n\r\nconst Play = ({onPlayerClick}) => {\r\n  return (\r\n      <svg className=\"playerbutton\" viewBox=\"0 0 60 60\" onClick={onPlayerClick}>\r\n        <polygon points=\"0,0 50,30 0,60\" />\r\n      </svg>\r\n  )\r\n}\r\n\r\nexport default Play\r\n","import React from 'react';\r\nimport './style.scss';\r\nimport Pause from './player_components/Pause.js';\r\nimport Play from './player_components/Play.js';\r\nimport {isMobile} from 'react-device-detect';\r\nclass Player extends React.Component {\r\n  constructor(props) {\r\n  super(props);\r\n  this.state = {\r\n    song_image:'',\r\n    song_title:'',\r\n    song_author:'',\r\n    playin:false,\r\n    play:false,\r\n    stop:false,\r\n    volume:50,\r\n  };\r\n  this.handleVolume = this.handleVolume.bind(this);\r\n\r\n  this.handlePlayerClick = this.handlePlayerClick.bind(this);\r\n  this.url = \"https://servidorradio.spainrp.es/stream\";\r\n}\r\n\r\n\r\ncomponentDidMount(){\r\n  this.playerCheck();\r\n  if (localStorage.getItem(\"PlayerVolume\") == null) {\r\n    localStorage.setItem('PlayerVolume','50');\r\n  }\r\n  if(isMobile){\r\n    localStorage.setItem('PlayerVolume','100');\r\n  }\r\n  const interval = setInterval(() => {\r\n    this.playerCheck();\r\n  }, 15000);\r\n  return () => clearInterval(interval);\r\n\r\n\r\n\r\n}\r\n\r\nplayerCheck(){\r\n  fetch(\"https://cors-anywhere.herokuapp.com/https://radio.spainrp.es/player/index.php?c=SpainRP%20Radio\",{\r\n    headers: {\r\n    'sec-fetch-site': 'same-origin',\r\n    'origin':'google.es',\r\n    },\r\n  })\r\n  .then(res => res.json())\r\n  .then(\r\n    (result) => {\r\n      this.setState({\r\n        song_image: 'https://radio.spainrp.es/player/'+result.image,\r\n        song_title: result.title,\r\n        song_author:result.artist,\r\n\r\n      });\r\n    },\r\n    (error) => {\r\n      this.setState({\r\n\r\n      });\r\n    }\r\n  )\r\n}\r\nplay(){\r\n  this.setState({\r\n    play: true,\r\n    pause: false,\r\n    volume: localStorage.getItem(\"PlayerVolume\"),\r\n  });\r\n  console.log(this.audio);\r\n  this.audio = new Audio(this.url);\r\n  this.audio.volume = ((localStorage.getItem(\"PlayerVolume\")) / 900);\r\n  this.audio.play();\r\n}\r\n\r\npause(){\r\nthis.setState({ play: false, pause: true });\r\n  this.audio.pause();\r\n}\r\nhandlePlayerClick(){\r\n  if (!this.state.playing) {\r\n    this.setState({playing: true});\r\n    this.play();\r\n    if(isMobile){\r\n      this.props.action(20);\r\n    }else{\r\n    this.props.action(this.state.volume);\r\n  }\r\n  } else {\r\n    this.setState({playing: false});\r\n    this.pause();\r\n    this.props.action(0);\r\n\r\n  }\r\n}\r\n\r\nhandleVolume(event){\r\n  this.setState({volume: event.target.value});\r\n  this.audio.volume = ((this.state.volume) / 900);\r\n  localStorage.setItem(\"PlayerVolume\",this.state.volume);\r\n  if(this.state.playing){\r\n    this.props.action(this.state.volume);\r\n  }\r\n}\r\n\r\ncomponentWillUnmount(){\r\n}\r\n\r\n  render() {\r\n\r\n\r\n\r\n\r\n    let imageofsong = this.state.song_image;\r\n    let titleofsong = this.state.song_title;\r\n    let authorofsong = this.state.song_author;\r\n    let range;\r\n    if(!isMobile){\r\n\r\n    if(this.state.playing){\r\n      range = (\r\n        <div className=\"info\" >\r\n        <input type=\"range\" min=\"1\" max=\"100\" value={this.state.volume} className=\"slider\" onChange={this.handleVolume}></input>\r\n        </div>\r\n      )\r\n    }else{\r\n      range = (\r\n        <div className=\"info\" >\r\n        <input type=\"range\" min=\"1\" max=\"100\" value={this.state.volume} className=\"slider\" onChange={this.handleVolume} disabled></input>\r\n        </div>\r\n      )\r\n\r\n    }\r\n  }else{\r\n    range = (null)\r\n  }\r\n    return(\r\n      <>\r\n        <section className=\"player full\">\r\n          <div className=\"container\">\r\n            <div className=\"info\">\r\n              <img alt={titleofsong} src={imageofsong}></img>\r\n              <div className=\"data\"><h2>{titleofsong}</h2><p>{authorofsong}</p></div>\r\n            </div>\r\n            {this.state.playing? <Pause onPlayerClick={this.handlePlayerClick} /> : <Play onPlayerClick={this.handlePlayerClick} />}\r\n              {range}\r\n          </div>\r\n        </section>\r\n      </>\r\n    );\r\n\r\n}\r\n}\r\n\r\nexport default Player;\r\n","import React from 'react';\r\nimport './style.scss';\r\n\r\nclass History extends React.Component {\r\n  constructor(props) {\r\n  super(props);\r\n  this.state = {\r\n  };\r\n\r\n}\r\n\r\n\r\ncomponentDidMount(){\r\n}\r\ncomponentWillUnmount(){\r\n}\r\n\r\n  render() {\r\n\r\n    return(\r\n      <>\r\n        <section className=\"history\">\r\n          <div className=\"item\"><div className=\"content\"></div></div>\r\n        </section>\r\n      </>\r\n    );\r\n\r\n}\r\n}\r\n\r\nexport default History;\r\n","import React from 'react';\r\nimport './style.scss';\r\nimport Player from '../player/main';\r\nimport History from '../history/main';\r\nimport styled, { keyframes } from \"styled-components\";\r\n\r\nclass Content extends React.Component {\r\n  constructor(props) {\r\n  super(props);\r\n  this.state = {\r\n    shaked:0,\r\n  };\r\n  this.tremble = this.tremble.bind(this);\r\n\r\n}\r\n\r\n\r\ncomponentDidMount(){\r\n}\r\ncomponentWillUnmount(){\r\n}\r\ntremble(e){\r\n  this.setState({\r\n    shaked:e,\r\n  })\r\n}\r\n  render() {\r\n    const volume = this.state.shaked;\r\n    const shake = keyframes`\r\n    10%, 90% {\r\n      transform: translate3d(${(volume / 4) }px, ${(volume * 0.92) }px, 0);\r\n    }\r\n\r\n    20%, 80% {\r\n      transform: translate3d(${(volume * 0.23) }px, -${(volume * 0.33) }px, 0);\r\n    }\r\n\r\n    30%, 50%, 70% {\r\n      transform: translate3d(-${(volume * 0.53) }px, -${(volume * 0.93) }px, ${(volume * 0.53) }px);\r\n    }\r\n\r\n    40%, 60% {\r\n      transform: translate3d(${(volume * 0.912) }px, -${(volume * 0.212) }px, ${(volume * 0.23) }px);\r\n    }\r\n    `\r\n\r\n    const Div = styled.div`\r\n      animation: ${shake} 1s cubic-bezier(0,0,0,0) both infinite alternate;\r\n    `\r\n    let logo;\r\n    if(this.state.shaked > 0){\r\n      logo = (<Div className=\"logo\"></Div>)\r\n    }else{\r\n      logo = (<div className=\"logo\"></div>)\r\n    }\r\n    return(\r\n      <>\r\n        <section className=\"ScreenContent\">\r\n        </section>\r\n        <div className=\"backdrop\">\r\n          <div className=\"centered\">{logo}</div>\r\n          <Player action={this.tremble}/>\r\n        </div>\r\n      </>\r\n    );\r\n\r\n}\r\n}\r\n\r\nexport default Content;\r\n","import React from 'react';\r\nimport './style.scss';\r\n\r\nclass Preload extends React.Component {\r\n  constructor(props) {\r\n  super(props);\r\n  this.state = {\r\n  };\r\n}\r\n\r\n\r\ncomponentDidMount(){\r\n}\r\ncomponentWillUnmount(){\r\n}\r\n\r\n  render() {\r\n    let preload_component;\r\n    if(this.props.action === true){\r\n      preload_component = (\r\n        <section className=\"PreloadScreen out\">\r\n          <div className=\"logo\"></div>\r\n        </section>\r\n      )\r\n    }else{\r\n      preload_component = (\r\n        <section className=\"PreloadScreen\">\r\n          <div className=\"logo\"></div>\r\n        </section>\r\n      )\r\n    }\r\n    return(\r\n      <>\r\n      {preload_component}\r\n      </>\r\n    );\r\n\r\n}\r\n}\r\n\r\nexport default Preload;\r\n","import React from 'react';\nimport './App.css';\nimport Content from './components/content/main';\n\nimport Preload from './components/preloader/main';\nclass App extends React.Component {\n\n  constructor(props) {\n  super(props);\n  this.state = {\n    preloaded: false,\n  };\n}\n  componentDidMount(){\n    setTimeout(() => {\n      this.setState({\n        preloaded:true,\n      });\n    }, 3000);\n\n  }\n  render(){\n  return (\n    <>\n    <Preload action={this.state.preloaded}/>\n    <Content/>\n    </>\n  );\n}\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}